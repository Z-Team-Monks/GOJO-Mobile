// Mocks generated by Mockito 5.4.0 from annotations
// in gojo_landlord/test/features/property/create_property/presentation/bloc/create_property_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:gojo_landlord/features/property/create_property/data_layer/model/category.dart'
    as _i4;
import 'package:gojo_landlord/features/property/create_property/data_layer/model/facility.dart'
    as _i5;
import 'package:gojo_landlord/features/property/create_property/data_layer/model/new_property.dart'
    as _i6;
import 'package:gojo_landlord/features/property/create_property/data_layer/property_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PropertyRepositoryAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockPropertyRepositoryAPI extends _i1.Mock
    implements _i2.PropertyRepositoryAPI {
  MockPropertyRepositoryAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Category>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Category>>.value(<_i4.Category>[]),
      ) as _i3.Future<List<_i4.Category>>);
  @override
  _i3.Future<List<_i5.Facility>> getFacilities() => (super.noSuchMethod(
        Invocation.method(
          #getFacilities,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Facility>>.value(<_i5.Facility>[]),
      ) as _i3.Future<List<_i5.Facility>>);
  @override
  _i3.Future<void> createProperty(_i6.NewProperty? newProperty) =>
      (super.noSuchMethod(
        Invocation.method(
          #createProperty,
          [newProperty],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
